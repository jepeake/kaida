Nonterminals useless in grammar

    initializer
    initializer_list


Terminals unused in grammar

    CHAR_CONSTANT
    LE_OP
    GE_OP
    TYPE_NAME
    TYPEDEF
    EXTERN
    STATIC
    AUTO
    REGISTER
    STRUCT
    UNION
    ELLIPSIS
    GOTO


Rules useless in grammar

  146 initializer: assignment_expression
  147            | LCURLYBRACE initializer_list RCURLYBRACE
  148            | LCURLYBRACE initializer_list COMMA RCURLYBRACE

  149 initializer_list: initializer
  150                 | initializer_list COMMA initializer


State 256 conflicts: 1 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: translation_unit

    2 translation_unit: external_declaration
    3                 | translation_unit external_declaration

    4 external_declaration: function_definition
    5                     | declaration

    6 function_definition: type_specifier declarator block
    7                    | declarator block

    8 declaration: type_specifier SEMIC
    9            | type_specifier init_declarator_list SEMIC

   10 declaration_specifiers: type_specifier

   11 declarator: direct_declarator

   12 declaration_list: declaration
   13                 | declaration_list declaration

   14 block: LCURLYBRACE RCURLYBRACE
   15      | LCURLYBRACE statement_list RCURLYBRACE
   16      | LCURLYBRACE declaration_list RCURLYBRACE
   17      | LCURLYBRACE declaration_list statement_list RCURLYBRACE

   18 init_declarator_list: init_declarator
   19                     | init_declarator_list COMMA init_declarator

   20 type_specifier: VOID
   21               | CHAR
   22               | INT
   23               | FLOAT
   24               | DOUBLE
   25               | UNSIGNED
   26               | enum_specifier

   27 direct_declarator: IDENTIFIER
   28                  | LBRACKET declarator RBRACKET
   29                  | direct_declarator LBRACKET parameter_list RBRACKET
   30                  | direct_declarator LBRACKET identifier_list RBRACKET
   31                  | direct_declarator LBRACKET RBRACKET
   32                  | direct_declarator LSQUAREBRACKET constant_expression RSQUAREBRACKET
   33                  | direct_declarator LSQUAREBRACKET RSQUAREBRACKET

   34 statement_list: statement
   35               | statement_list statement

   36 init_declarator: declarator
   37                | declarator EQ assignment_expression

   38 constant_expression: conditional_expression

   39 identifier_list: IDENTIFIER
   40                | identifier_list COMMA IDENTIFIER

   41 statement: labeled_statement
   42          | block
   43          | expression_statement
   44          | selection_statement
   45          | iteration_statement
   46          | jump_statement

   47 conditional_expression: logical_or_expression
   48                       | logical_or_expression QMARK expression COLON conditional_expression

   49 parameter_list: parameter_declaration
   50               | parameter_list COMMA parameter_declaration

   51 labeled_statement: IDENTIFIER COLON statement
   52                  | CASE constant_expression COLON statement
   53                  | DEFAULT COLON statement

   54 expression_statement: SEMIC
   55                     | expression SEMIC

   56 selection_statement: IF LBRACKET expression RBRACKET statement ELSE statement
   57                    | IF LBRACKET expression RBRACKET statement
   58                    | SWITCH LBRACKET expression RBRACKET statement

   59 iteration_statement: WHILE LBRACKET expression RBRACKET statement
   60                    | DO statement WHILE LBRACKET expression RBRACKET SEMIC
   61                    | FOR LBRACKET expression_statement expression_statement LBRACKET statement
   62                    | FOR LBRACKET expression_statement expression_statement expression RBRACKET statement

   63 jump_statement: CONTINUE SEMIC
   64               | BREAK SEMIC
   65               | RETURN SEMIC
   66               | RETURN expression SEMIC

   67 assignment_expression: conditional_expression
   68                      | unary_expression EQ assignment_expression
   69                      | unary_expression MUL_ASSIGN assignment_expression
   70                      | unary_expression DIV_ASSIGN assignment_expression
   71                      | unary_expression MOD_ASSIGN assignment_expression
   72                      | unary_expression ADD_ASSIGN assignment_expression
   73                      | unary_expression SUB_ASSIGN assignment_expression
   74                      | unary_expression LEFT_ASSIGN assignment_expression
   75                      | unary_expression RIGHT_ASSIGN assignment_expression
   76                      | unary_expression AND_ASSIGN assignment_expression
   77                      | unary_expression XOR_ASSIGN assignment_expression
   78                      | unary_expression OR_ASSIGN assignment_expression

   79 logical_or_expression: logical_and_expression
   80                      | logical_or_expression OR_OP logical_and_expression

   81 expression: assignment_expression
   82           | expression COMMA assignment_expression

   83 unary_expression: postfix_expression
   84                 | INC_OP unary_expression
   85                 | DEC_OP unary_expression
   86                 | AND unary_expression
   87                 | ADD unary_expression
   88                 | SUB unary_expression
   89                 | TILDE unary_expression
   90                 | EXCLAM unary_expression
   91                 | SIZEOF unary_expression
   92                 | SIZEOF LBRACKET type_name RBRACKET

   93 logical_and_expression: inclusive_or_expression
   94                       | logical_and_expression AND_OP inclusive_or_expression

   95 postfix_expression: primary_expression
   96                   | postfix_expression LSQUAREBRACKET expression RSQUAREBRACKET
   97                   | postfix_expression LBRACKET RBRACKET
   98                   | postfix_expression LBRACKET argument_expression_list RBRACKET
   99                   | postfix_expression FULLSTOP IDENTIFIER
  100                   | postfix_expression PTR_OP IDENTIFIER
  101                   | postfix_expression INC_OP
  102                   | postfix_expression DEC_OP

  103 primary_expression: IDENTIFIER
  104                   | INT_CONSTANT
  105                   | FLOAT_CONSTANT
  106                   | STRING_LITERAL
  107                   | LBRACKET expression RBRACKET

  108 type_name: specifier_qualifier_list

  109 inclusive_or_expression: exclusive_or_expression
  110                        | inclusive_or_expression INCLOR exclusive_or_expression

  111 argument_expression_list: assignment_expression
  112                         | argument_expression_list COMMA assignment_expression

  113 specifier_qualifier_list: type_specifier specifier_qualifier_list
  114                         | type_specifier

  115 exclusive_or_expression: and_expression
  116                        | exclusive_or_expression EXCLOR and_expression

  117 and_expression: equality_expression
  118               | and_expression AND equality_expression

  119 equality_expression: relational_expression
  120                    | equality_expression EQ_OP relational_expression
  121                    | equality_expression NE_OP relational_expression

  122 relational_expression: shift_expression
  123                      | relational_expression LESSTHAN shift_expression
  124                      | relational_expression GREATERTHAN shift_expression
  125                      | relational_expression LTEQ shift_expression
  126                      | relational_expression GTEQ shift_expression

  127 shift_expression: additive_expression
  128                 | shift_expression LEFT_OP additive_expression
  129                 | shift_expression RIGHT_OP additive_expression

  130 additive_expression: multiplicative_expression
  131                    | additive_expression ADD multiplicative_expression
  132                    | additive_expression SUB multiplicative_expression

  133 multiplicative_expression: unary_expression
  134                          | multiplicative_expression MUL unary_expression
  135                          | multiplicative_expression DIV unary_expression
  136                          | multiplicative_expression MOD unary_expression

  137 enumerator: IDENTIFIER
  138           | IDENTIFIER EQ constant_expression

  139 enumerator_list: enumerator
  140                | enumerator_list COMMA enumerator

  141 enum_specifier: ENUM LCURLYBRACE enumerator_list RCURLYBRACE
  142               | ENUM IDENTIFIER LCURLYBRACE enumerator_list RCURLYBRACE
  143               | ENUM IDENTIFIER

  144 parameter_declaration: declaration_specifiers declarator
  145                      | declaration_specifiers


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER <string> (258) 27 39 40 51 99 100 103 137 138 142 143
    INT_CONSTANT <intNumber> (259) 104
    FLOAT_CONSTANT <fpNumber> (260) 105
    CHAR_CONSTANT (261)
    STRING_LITERAL <string> (262) 106
    SIZEOF (263) 91 92
    PTR_OP (264) 100
    INC_OP (265) 84 101
    DEC_OP (266) 85 102
    LEFT_OP (267) 128
    RIGHT_OP (268) 129
    LE_OP (269)
    GE_OP (270)
    EQ_OP (271) 120
    NE_OP (272) 121
    AND_OP (273) 94
    OR_OP (274) 80
    MUL_ASSIGN (275) 69
    DIV_ASSIGN (276) 70
    MOD_ASSIGN (277) 71
    ADD_ASSIGN (278) 72
    SUB_ASSIGN (279) 73
    LEFT_ASSIGN (280) 74
    RIGHT_ASSIGN (281) 75
    AND_ASSIGN (282) 76
    XOR_ASSIGN (283) 77
    OR_ASSIGN (284) 78
    TYPE_NAME (285)
    FULLSTOP (286) 99
    AND (287) 86 118
    TILDE (288) 89
    EXCLAM (289) 90
    TYPEDEF (290)
    EXTERN (291)
    STATIC (292)
    AUTO (293)
    REGISTER (294)
    QMARK (295) 48
    CHAR (296) 21
    INT (297) 22
    UNSIGNED (298) 25
    FLOAT (299) 23
    DOUBLE (300) 24
    VOID (301) 20
    STRUCT (302)
    UNION (303)
    ENUM (304) 141 142 143
    ELLIPSIS (305)
    CASE (306) 52
    DEFAULT (307) 53
    ELSE (308) 56
    SWITCH (309) 58
    WHILE (310) 59 60
    DO (311) 60
    FOR (312) 61 62
    GOTO (313)
    CONTINUE (314) 63
    BREAK (315) 64
    RETURN (316) 65 66
    IF (317) 56 57
    EQ (318) 37 68 138
    SEMIC (319) 8 9 54 55 60 63 64 65 66
    ADD (320) 87 131
    SUB (321) 88 132
    MUL (322) 134
    DIV (323) 135
    MOD (324) 136
    LESSTHAN (325) 123
    GREATERTHAN (326) 124
    LBRACKET (327) 28 29 30 31 56 57 58 59 60 61 62 92 97 98 107
    RBRACKET (328) 28 29 30 31 56 57 58 59 60 62 92 97 98 107
    LCURLYBRACE (329) 14 15 16 17 141 142
    RCURLYBRACE (330) 14 15 16 17 141 142
    LTEQ (331) 125
    GTEQ (332) 126
    EXCLOR (333) 116
    INCLOR (334) 110
    COMMA (335) 19 40 50 82 112 140
    COLON (336) 48 51 52 53
    LSQUAREBRACKET (337) 32 33 96
    RSQUAREBRACKET (338) 32 33 96


Nonterminals, with rules where they appear

    $accept (84)
        on left: 0
    ROOT (85)
        on left: 1
        on right: 0
    translation_unit <nodeptr> (86)
        on left: 2 3
        on right: 1 3
    external_declaration <nodeptr> (87)
        on left: 4 5
        on right: 2 3
    function_definition <nodeptr> (88)
        on left: 6 7
        on right: 4
    declaration <nodeptr> (89)
        on left: 8 9
        on right: 5 12 13
    declaration_specifiers <nodeptr> (90)
        on left: 10
        on right: 144 145
    declarator <nodeptr> (91)
        on left: 11
        on right: 6 7 28 36 37 144
    declaration_list <nodeptr> (92)
        on left: 12 13
        on right: 13 16 17
    block <nodeptr> (93)
        on left: 14 15 16 17
        on right: 6 7 42
    init_declarator_list <nodeptr> (94)
        on left: 18 19
        on right: 9 19
    type_specifier <nodeptr> (95)
        on left: 20 21 22 23 24 25 26
        on right: 6 8 9 10 113 114
    direct_declarator <nodeptr> (96)
        on left: 27 28 29 30 31 32 33
        on right: 11 29 30 31 32 33
    statement_list <nodeptr> (97)
        on left: 34 35
        on right: 15 17 35
    init_declarator <nodeptr> (98)
        on left: 36 37
        on right: 18 19
    constant_expression <nodeptr> (99)
        on left: 38
        on right: 32 52 138
    identifier_list <nodeptr> (100)
        on left: 39 40
        on right: 30 40
    statement <nodeptr> (101)
        on left: 41 42 43 44 45 46
        on right: 34 35 51 52 53 56 57 58 59 60 61 62
    conditional_expression <nodeptr> (102)
        on left: 47 48
        on right: 38 48 67
    parameter_list <nodeptr> (103)
        on left: 49 50
        on right: 29 50
    labeled_statement <nodeptr> (104)
        on left: 51 52 53
        on right: 41
    expression_statement <nodeptr> (105)
        on left: 54 55
        on right: 43 61 62
    selection_statement <nodeptr> (106)
        on left: 56 57 58
        on right: 44
    iteration_statement <nodeptr> (107)
        on left: 59 60 61 62
        on right: 45
    jump_statement <nodeptr> (108)
        on left: 63 64 65 66
        on right: 46
    assignment_expression <nodeptr> (109)
        on left: 67 68 69 70 71 72 73 74 75 76 77 78
        on right: 37 68 69 70 71 72 73 74 75 76 77 78 81 82 111 112
    logical_or_expression <nodeptr> (110)
        on left: 79 80
        on right: 47 48 80
    expression <nodeptr> (111)
        on left: 81 82
        on right: 48 55 56 57 58 59 60 62 66 82 96 107
    unary_expression <nodeptr> (112)
        on left: 83 84 85 86 87 88 89 90 91 92
        on right: 68 69 70 71 72 73 74 75 76 77 78 84 85 86 87 88 89 90 91 133 134 135 136
    logical_and_expression <nodeptr> (113)
        on left: 93 94
        on right: 79 80 94
    postfix_expression <nodeptr> (114)
        on left: 95 96 97 98 99 100 101 102
        on right: 83 96 97 98 99 100 101 102
    primary_expression <nodeptr> (115)
        on left: 103 104 105 106 107
        on right: 95
    type_name <nodeptr> (116)
        on left: 108
        on right: 92
    inclusive_or_expression <nodeptr> (117)
        on left: 109 110
        on right: 93 94 110
    argument_expression_list <nodeptr> (118)
        on left: 111 112
        on right: 98 112
    specifier_qualifier_list <nodeptr> (119)
        on left: 113 114
        on right: 108 113
    exclusive_or_expression <nodeptr> (120)
        on left: 115 116
        on right: 109 110 116
    and_expression <nodeptr> (121)
        on left: 117 118
        on right: 115 116 118
    equality_expression <nodeptr> (122)
        on left: 119 120 121
        on right: 117 118 120 121
    relational_expression <nodeptr> (123)
        on left: 122 123 124 125 126
        on right: 119 120 121 123 124 125 126
    shift_expression <nodeptr> (124)
        on left: 127 128 129
        on right: 122 123 124 125 126 128 129
    additive_expression <nodeptr> (125)
        on left: 130 131 132
        on right: 127 128 129 131 132
    multiplicative_expression <nodeptr> (126)
        on left: 133 134 135 136
        on right: 130 131 132 134 135 136
    enumerator <nodeptr> (127)
        on left: 137 138
        on right: 139 140
    enumerator_list <nodeptr> (128)
        on left: 139 140
        on right: 140 141 142
    enum_specifier <nodeptr> (129)
        on left: 141 142 143
        on right: 26
    parameter_declaration <nodeptr> (130)
        on left: 144 145
        on right: 49 50


State 0

    0 $accept: . ROOT $end

    IDENTIFIER  shift, and go to state 1
    CHAR        shift, and go to state 2
    INT         shift, and go to state 3
    UNSIGNED    shift, and go to state 4
    FLOAT       shift, and go to state 5
    DOUBLE      shift, and go to state 6
    VOID        shift, and go to state 7
    ENUM        shift, and go to state 8
    LBRACKET    shift, and go to state 9

    ROOT                  go to state 10
    translation_unit      go to state 11
    external_declaration  go to state 12
    function_definition   go to state 13
    declaration           go to state 14
    declarator            go to state 15
    type_specifier        go to state 16
    direct_declarator     go to state 17
    enum_specifier        go to state 18


State 1

   27 direct_declarator: IDENTIFIER .

    $default  reduce using rule 27 (direct_declarator)


State 2

   21 type_specifier: CHAR .

    $default  reduce using rule 21 (type_specifier)


State 3

   22 type_specifier: INT .

    $default  reduce using rule 22 (type_specifier)


State 4

   25 type_specifier: UNSIGNED .

    $default  reduce using rule 25 (type_specifier)


State 5

   23 type_specifier: FLOAT .

    $default  reduce using rule 23 (type_specifier)


State 6

   24 type_specifier: DOUBLE .

    $default  reduce using rule 24 (type_specifier)


State 7

   20 type_specifier: VOID .

    $default  reduce using rule 20 (type_specifier)


State 8

  141 enum_specifier: ENUM . LCURLYBRACE enumerator_list RCURLYBRACE
  142               | ENUM . IDENTIFIER LCURLYBRACE enumerator_list RCURLYBRACE
  143               | ENUM . IDENTIFIER

    IDENTIFIER   shift, and go to state 19
    LCURLYBRACE  shift, and go to state 20


State 9

   28 direct_declarator: LBRACKET . declarator RBRACKET

    IDENTIFIER  shift, and go to state 1
    LBRACKET    shift, and go to state 9

    declarator         go to state 21
    direct_declarator  go to state 17


State 10

    0 $accept: ROOT . $end

    $end  shift, and go to state 22


State 11

    1 ROOT: translation_unit .
    3 translation_unit: translation_unit . external_declaration

    IDENTIFIER  shift, and go to state 1
    CHAR        shift, and go to state 2
    INT         shift, and go to state 3
    UNSIGNED    shift, and go to state 4
    FLOAT       shift, and go to state 5
    DOUBLE      shift, and go to state 6
    VOID        shift, and go to state 7
    ENUM        shift, and go to state 8
    LBRACKET    shift, and go to state 9

    $default  reduce using rule 1 (ROOT)

    external_declaration  go to state 23
    function_definition   go to state 13
    declaration           go to state 14
    declarator            go to state 15
    type_specifier        go to state 16
    direct_declarator     go to state 17
    enum_specifier        go to state 18


State 12

    2 translation_unit: external_declaration .

    $default  reduce using rule 2 (translation_unit)


State 13

    4 external_declaration: function_definition .

    $default  reduce using rule 4 (external_declaration)


State 14

    5 external_declaration: declaration .

    $default  reduce using rule 5 (external_declaration)


State 15

    7 function_definition: declarator . block

    LCURLYBRACE  shift, and go to state 24

    block  go to state 25


State 16

    6 function_definition: type_specifier . declarator block
    8 declaration: type_specifier . SEMIC
    9            | type_specifier . init_declarator_list SEMIC

    IDENTIFIER  shift, and go to state 1
    SEMIC       shift, and go to state 26
    LBRACKET    shift, and go to state 9

    declarator            go to state 27
    init_declarator_list  go to state 28
    direct_declarator     go to state 17
    init_declarator       go to state 29


State 17

   11 declarator: direct_declarator .
   29 direct_declarator: direct_declarator . LBRACKET parameter_list RBRACKET
   30                  | direct_declarator . LBRACKET identifier_list RBRACKET
   31                  | direct_declarator . LBRACKET RBRACKET
   32                  | direct_declarator . LSQUAREBRACKET constant_expression RSQUAREBRACKET
   33                  | direct_declarator . LSQUAREBRACKET RSQUAREBRACKET

    LBRACKET        shift, and go to state 30
    LSQUAREBRACKET  shift, and go to state 31

    $default  reduce using rule 11 (declarator)


State 18

   26 type_specifier: enum_specifier .

    $default  reduce using rule 26 (type_specifier)


State 19

  142 enum_specifier: ENUM IDENTIFIER . LCURLYBRACE enumerator_list RCURLYBRACE
  143               | ENUM IDENTIFIER .

    LCURLYBRACE  shift, and go to state 32

    $default  reduce using rule 143 (enum_specifier)


State 20

  141 enum_specifier: ENUM LCURLYBRACE . enumerator_list RCURLYBRACE

    IDENTIFIER  shift, and go to state 33

    enumerator       go to state 34
    enumerator_list  go to state 35


State 21

   28 direct_declarator: LBRACKET declarator . RBRACKET

    RBRACKET  shift, and go to state 36


State 22

    0 $accept: ROOT $end .

    $default  accept


State 23

    3 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 3 (translation_unit)


State 24

   14 block: LCURLYBRACE . RCURLYBRACE
   15      | LCURLYBRACE . statement_list RCURLYBRACE
   16      | LCURLYBRACE . declaration_list RCURLYBRACE
   17      | LCURLYBRACE . declaration_list statement_list RCURLYBRACE

    IDENTIFIER      shift, and go to state 37
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    CHAR            shift, and go to state 2
    INT             shift, and go to state 3
    UNSIGNED        shift, and go to state 4
    FLOAT           shift, and go to state 5
    DOUBLE          shift, and go to state 6
    VOID            shift, and go to state 7
    ENUM            shift, and go to state 8
    CASE            shift, and go to state 47
    DEFAULT         shift, and go to state 48
    SWITCH          shift, and go to state 49
    WHILE           shift, and go to state 50
    DO              shift, and go to state 51
    FOR             shift, and go to state 52
    CONTINUE        shift, and go to state 53
    BREAK           shift, and go to state 54
    RETURN          shift, and go to state 55
    IF              shift, and go to state 56
    SEMIC           shift, and go to state 57
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60
    LCURLYBRACE     shift, and go to state 24
    RCURLYBRACE     shift, and go to state 61

    declaration                go to state 62
    declaration_list           go to state 63
    block                      go to state 64
    type_specifier             go to state 65
    statement_list             go to state 66
    statement                  go to state 67
    conditional_expression     go to state 68
    labeled_statement          go to state 69
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73
    assignment_expression      go to state 74
    logical_or_expression      go to state 75
    expression                 go to state 76
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    enum_specifier             go to state 18


State 25

    7 function_definition: declarator block .

    $default  reduce using rule 7 (function_definition)


State 26

    8 declaration: type_specifier SEMIC .

    $default  reduce using rule 8 (declaration)


State 27

    6 function_definition: type_specifier declarator . block
   36 init_declarator: declarator .
   37                | declarator . EQ assignment_expression

    EQ           shift, and go to state 89
    LCURLYBRACE  shift, and go to state 24

    $default  reduce using rule 36 (init_declarator)

    block  go to state 90


State 28

    9 declaration: type_specifier init_declarator_list . SEMIC
   19 init_declarator_list: init_declarator_list . COMMA init_declarator

    SEMIC  shift, and go to state 91
    COMMA  shift, and go to state 92


State 29

   18 init_declarator_list: init_declarator .

    $default  reduce using rule 18 (init_declarator_list)


State 30

   29 direct_declarator: direct_declarator LBRACKET . parameter_list RBRACKET
   30                  | direct_declarator LBRACKET . identifier_list RBRACKET
   31                  | direct_declarator LBRACKET . RBRACKET

    IDENTIFIER  shift, and go to state 93
    CHAR        shift, and go to state 2
    INT         shift, and go to state 3
    UNSIGNED    shift, and go to state 4
    FLOAT       shift, and go to state 5
    DOUBLE      shift, and go to state 6
    VOID        shift, and go to state 7
    ENUM        shift, and go to state 8
    RBRACKET    shift, and go to state 94

    declaration_specifiers  go to state 95
    type_specifier          go to state 96
    identifier_list         go to state 97
    parameter_list          go to state 98
    enum_specifier          go to state 18
    parameter_declaration   go to state 99


State 31

   32 direct_declarator: direct_declarator LSQUAREBRACKET . constant_expression RSQUAREBRACKET
   33                  | direct_declarator LSQUAREBRACKET . RSQUAREBRACKET

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60
    RSQUAREBRACKET  shift, and go to state 101

    constant_expression        go to state 102
    conditional_expression     go to state 103
    logical_or_expression      go to state 75
    unary_expression           go to state 104
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 32

  142 enum_specifier: ENUM IDENTIFIER LCURLYBRACE . enumerator_list RCURLYBRACE

    IDENTIFIER  shift, and go to state 33

    enumerator       go to state 34
    enumerator_list  go to state 105


State 33

  137 enumerator: IDENTIFIER .
  138           | IDENTIFIER . EQ constant_expression

    EQ  shift, and go to state 106

    $default  reduce using rule 137 (enumerator)


State 34

  139 enumerator_list: enumerator .

    $default  reduce using rule 139 (enumerator_list)


State 35

  140 enumerator_list: enumerator_list . COMMA enumerator
  141 enum_specifier: ENUM LCURLYBRACE enumerator_list . RCURLYBRACE

    RCURLYBRACE  shift, and go to state 107
    COMMA        shift, and go to state 108


State 36

   28 direct_declarator: LBRACKET declarator RBRACKET .

    $default  reduce using rule 28 (direct_declarator)


State 37

   51 labeled_statement: IDENTIFIER . COLON statement
  103 primary_expression: IDENTIFIER .

    COLON  shift, and go to state 109

    $default  reduce using rule 103 (primary_expression)


State 38

  104 primary_expression: INT_CONSTANT .

    $default  reduce using rule 104 (primary_expression)


State 39

  105 primary_expression: FLOAT_CONSTANT .

    $default  reduce using rule 105 (primary_expression)


State 40

  106 primary_expression: STRING_LITERAL .

    $default  reduce using rule 106 (primary_expression)


State 41

   91 unary_expression: SIZEOF . unary_expression
   92                 | SIZEOF . LBRACKET type_name RBRACKET

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 110

    unary_expression    go to state 111
    postfix_expression  go to state 79
    primary_expression  go to state 80


State 42

   84 unary_expression: INC_OP . unary_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    unary_expression    go to state 112
    postfix_expression  go to state 79
    primary_expression  go to state 80


State 43

   85 unary_expression: DEC_OP . unary_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    unary_expression    go to state 113
    postfix_expression  go to state 79
    primary_expression  go to state 80


State 44

   86 unary_expression: AND . unary_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    unary_expression    go to state 114
    postfix_expression  go to state 79
    primary_expression  go to state 80


State 45

   89 unary_expression: TILDE . unary_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    unary_expression    go to state 115
    postfix_expression  go to state 79
    primary_expression  go to state 80


State 46

   90 unary_expression: EXCLAM . unary_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    unary_expression    go to state 116
    postfix_expression  go to state 79
    primary_expression  go to state 80


State 47

   52 labeled_statement: CASE . constant_expression COLON statement

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    constant_expression        go to state 117
    conditional_expression     go to state 103
    logical_or_expression      go to state 75
    unary_expression           go to state 104
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 48

   53 labeled_statement: DEFAULT . COLON statement

    COLON  shift, and go to state 118


State 49

   58 selection_statement: SWITCH . LBRACKET expression RBRACKET statement

    LBRACKET  shift, and go to state 119


State 50

   59 iteration_statement: WHILE . LBRACKET expression RBRACKET statement

    LBRACKET  shift, and go to state 120


State 51

   60 iteration_statement: DO . statement WHILE LBRACKET expression RBRACKET SEMIC

    IDENTIFIER      shift, and go to state 37
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    CASE            shift, and go to state 47
    DEFAULT         shift, and go to state 48
    SWITCH          shift, and go to state 49
    WHILE           shift, and go to state 50
    DO              shift, and go to state 51
    FOR             shift, and go to state 52
    CONTINUE        shift, and go to state 53
    BREAK           shift, and go to state 54
    RETURN          shift, and go to state 55
    IF              shift, and go to state 56
    SEMIC           shift, and go to state 57
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60
    LCURLYBRACE     shift, and go to state 24

    block                      go to state 64
    statement                  go to state 121
    conditional_expression     go to state 68
    labeled_statement          go to state 69
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73
    assignment_expression      go to state 74
    logical_or_expression      go to state 75
    expression                 go to state 76
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 52

   61 iteration_statement: FOR . LBRACKET expression_statement expression_statement LBRACKET statement
   62                    | FOR . LBRACKET expression_statement expression_statement expression RBRACKET statement

    LBRACKET  shift, and go to state 122


State 53

   63 jump_statement: CONTINUE . SEMIC

    SEMIC  shift, and go to state 123


State 54

   64 jump_statement: BREAK . SEMIC

    SEMIC  shift, and go to state 124


State 55

   65 jump_statement: RETURN . SEMIC
   66               | RETURN . expression SEMIC

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    SEMIC           shift, and go to state 125
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    conditional_expression     go to state 68
    assignment_expression      go to state 74
    logical_or_expression      go to state 75
    expression                 go to state 126
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 56

   56 selection_statement: IF . LBRACKET expression RBRACKET statement ELSE statement
   57                    | IF . LBRACKET expression RBRACKET statement

    LBRACKET  shift, and go to state 127


State 57

   54 expression_statement: SEMIC .

    $default  reduce using rule 54 (expression_statement)


State 58

   87 unary_expression: ADD . unary_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    unary_expression    go to state 128
    postfix_expression  go to state 79
    primary_expression  go to state 80


State 59

   88 unary_expression: SUB . unary_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    unary_expression    go to state 129
    postfix_expression  go to state 79
    primary_expression  go to state 80


State 60

  107 primary_expression: LBRACKET . expression RBRACKET

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    conditional_expression     go to state 68
    assignment_expression      go to state 74
    logical_or_expression      go to state 75
    expression                 go to state 130
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 61

   14 block: LCURLYBRACE RCURLYBRACE .

    $default  reduce using rule 14 (block)


State 62

   12 declaration_list: declaration .

    $default  reduce using rule 12 (declaration_list)


State 63

   13 declaration_list: declaration_list . declaration
   16 block: LCURLYBRACE declaration_list . RCURLYBRACE
   17      | LCURLYBRACE declaration_list . statement_list RCURLYBRACE

    IDENTIFIER      shift, and go to state 37
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    CHAR            shift, and go to state 2
    INT             shift, and go to state 3
    UNSIGNED        shift, and go to state 4
    FLOAT           shift, and go to state 5
    DOUBLE          shift, and go to state 6
    VOID            shift, and go to state 7
    ENUM            shift, and go to state 8
    CASE            shift, and go to state 47
    DEFAULT         shift, and go to state 48
    SWITCH          shift, and go to state 49
    WHILE           shift, and go to state 50
    DO              shift, and go to state 51
    FOR             shift, and go to state 52
    CONTINUE        shift, and go to state 53
    BREAK           shift, and go to state 54
    RETURN          shift, and go to state 55
    IF              shift, and go to state 56
    SEMIC           shift, and go to state 57
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60
    LCURLYBRACE     shift, and go to state 24
    RCURLYBRACE     shift, and go to state 131

    declaration                go to state 132
    block                      go to state 64
    type_specifier             go to state 65
    statement_list             go to state 133
    statement                  go to state 67
    conditional_expression     go to state 68
    labeled_statement          go to state 69
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73
    assignment_expression      go to state 74
    logical_or_expression      go to state 75
    expression                 go to state 76
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    enum_specifier             go to state 18


State 64

   42 statement: block .

    $default  reduce using rule 42 (statement)


State 65

    8 declaration: type_specifier . SEMIC
    9            | type_specifier . init_declarator_list SEMIC

    IDENTIFIER  shift, and go to state 1
    SEMIC       shift, and go to state 26
    LBRACKET    shift, and go to state 9

    declarator            go to state 134
    init_declarator_list  go to state 28
    direct_declarator     go to state 17
    init_declarator       go to state 29


State 66

   15 block: LCURLYBRACE statement_list . RCURLYBRACE
   35 statement_list: statement_list . statement

    IDENTIFIER      shift, and go to state 37
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    CASE            shift, and go to state 47
    DEFAULT         shift, and go to state 48
    SWITCH          shift, and go to state 49
    WHILE           shift, and go to state 50
    DO              shift, and go to state 51
    FOR             shift, and go to state 52
    CONTINUE        shift, and go to state 53
    BREAK           shift, and go to state 54
    RETURN          shift, and go to state 55
    IF              shift, and go to state 56
    SEMIC           shift, and go to state 57
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60
    LCURLYBRACE     shift, and go to state 24
    RCURLYBRACE     shift, and go to state 135

    block                      go to state 64
    statement                  go to state 136
    conditional_expression     go to state 68
    labeled_statement          go to state 69
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73
    assignment_expression      go to state 74
    logical_or_expression      go to state 75
    expression                 go to state 76
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 67

   34 statement_list: statement .

    $default  reduce using rule 34 (statement_list)


State 68

   67 assignment_expression: conditional_expression .

    $default  reduce using rule 67 (assignment_expression)


State 69

   41 statement: labeled_statement .

    $default  reduce using rule 41 (statement)


State 70

   43 statement: expression_statement .

    $default  reduce using rule 43 (statement)


State 71

   44 statement: selection_statement .

    $default  reduce using rule 44 (statement)


State 72

   45 statement: iteration_statement .

    $default  reduce using rule 45 (statement)


State 73

   46 statement: jump_statement .

    $default  reduce using rule 46 (statement)


State 74

   81 expression: assignment_expression .

    $default  reduce using rule 81 (expression)


State 75

   47 conditional_expression: logical_or_expression .
   48                       | logical_or_expression . QMARK expression COLON conditional_expression
   80 logical_or_expression: logical_or_expression . OR_OP logical_and_expression

    OR_OP  shift, and go to state 137
    QMARK  shift, and go to state 138

    $default  reduce using rule 47 (conditional_expression)


State 76

   55 expression_statement: expression . SEMIC
   82 expression: expression . COMMA assignment_expression

    SEMIC  shift, and go to state 139
    COMMA  shift, and go to state 140


State 77

   68 assignment_expression: unary_expression . EQ assignment_expression
   69                      | unary_expression . MUL_ASSIGN assignment_expression
   70                      | unary_expression . DIV_ASSIGN assignment_expression
   71                      | unary_expression . MOD_ASSIGN assignment_expression
   72                      | unary_expression . ADD_ASSIGN assignment_expression
   73                      | unary_expression . SUB_ASSIGN assignment_expression
   74                      | unary_expression . LEFT_ASSIGN assignment_expression
   75                      | unary_expression . RIGHT_ASSIGN assignment_expression
   76                      | unary_expression . AND_ASSIGN assignment_expression
   77                      | unary_expression . XOR_ASSIGN assignment_expression
   78                      | unary_expression . OR_ASSIGN assignment_expression
  133 multiplicative_expression: unary_expression .

    MUL_ASSIGN    shift, and go to state 141
    DIV_ASSIGN    shift, and go to state 142
    MOD_ASSIGN    shift, and go to state 143
    ADD_ASSIGN    shift, and go to state 144
    SUB_ASSIGN    shift, and go to state 145
    LEFT_ASSIGN   shift, and go to state 146
    RIGHT_ASSIGN  shift, and go to state 147
    AND_ASSIGN    shift, and go to state 148
    XOR_ASSIGN    shift, and go to state 149
    OR_ASSIGN     shift, and go to state 150
    EQ            shift, and go to state 151

    $default  reduce using rule 133 (multiplicative_expression)


State 78

   79 logical_or_expression: logical_and_expression .
   94 logical_and_expression: logical_and_expression . AND_OP inclusive_or_expression

    AND_OP  shift, and go to state 152

    $default  reduce using rule 79 (logical_or_expression)


State 79

   83 unary_expression: postfix_expression .
   96 postfix_expression: postfix_expression . LSQUAREBRACKET expression RSQUAREBRACKET
   97                   | postfix_expression . LBRACKET RBRACKET
   98                   | postfix_expression . LBRACKET argument_expression_list RBRACKET
   99                   | postfix_expression . FULLSTOP IDENTIFIER
  100                   | postfix_expression . PTR_OP IDENTIFIER
  101                   | postfix_expression . INC_OP
  102                   | postfix_expression . DEC_OP

    PTR_OP          shift, and go to state 153
    INC_OP          shift, and go to state 154
    DEC_OP          shift, and go to state 155
    FULLSTOP        shift, and go to state 156
    LBRACKET        shift, and go to state 157
    LSQUAREBRACKET  shift, and go to state 158

    $default  reduce using rule 83 (unary_expression)


State 80

   95 postfix_expression: primary_expression .

    $default  reduce using rule 95 (postfix_expression)


State 81

   93 logical_and_expression: inclusive_or_expression .
  110 inclusive_or_expression: inclusive_or_expression . INCLOR exclusive_or_expression

    INCLOR  shift, and go to state 159

    $default  reduce using rule 93 (logical_and_expression)


State 82

  109 inclusive_or_expression: exclusive_or_expression .
  116 exclusive_or_expression: exclusive_or_expression . EXCLOR and_expression

    EXCLOR  shift, and go to state 160

    $default  reduce using rule 109 (inclusive_or_expression)


State 83

  115 exclusive_or_expression: and_expression .
  118 and_expression: and_expression . AND equality_expression

    AND  shift, and go to state 161

    $default  reduce using rule 115 (exclusive_or_expression)


State 84

  117 and_expression: equality_expression .
  120 equality_expression: equality_expression . EQ_OP relational_expression
  121                    | equality_expression . NE_OP relational_expression

    EQ_OP  shift, and go to state 162
    NE_OP  shift, and go to state 163

    $default  reduce using rule 117 (and_expression)


State 85

  119 equality_expression: relational_expression .
  123 relational_expression: relational_expression . LESSTHAN shift_expression
  124                      | relational_expression . GREATERTHAN shift_expression
  125                      | relational_expression . LTEQ shift_expression
  126                      | relational_expression . GTEQ shift_expression

    LESSTHAN     shift, and go to state 164
    GREATERTHAN  shift, and go to state 165
    LTEQ         shift, and go to state 166
    GTEQ         shift, and go to state 167

    $default  reduce using rule 119 (equality_expression)


State 86

  122 relational_expression: shift_expression .
  128 shift_expression: shift_expression . LEFT_OP additive_expression
  129                 | shift_expression . RIGHT_OP additive_expression

    LEFT_OP   shift, and go to state 168
    RIGHT_OP  shift, and go to state 169

    $default  reduce using rule 122 (relational_expression)


State 87

  127 shift_expression: additive_expression .
  131 additive_expression: additive_expression . ADD multiplicative_expression
  132                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 170
    SUB  shift, and go to state 171

    $default  reduce using rule 127 (shift_expression)


State 88

  130 additive_expression: multiplicative_expression .
  134 multiplicative_expression: multiplicative_expression . MUL unary_expression
  135                          | multiplicative_expression . DIV unary_expression
  136                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 172
    DIV  shift, and go to state 173
    MOD  shift, and go to state 174

    $default  reduce using rule 130 (additive_expression)


State 89

   37 init_declarator: declarator EQ . assignment_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    conditional_expression     go to state 68
    assignment_expression      go to state 175
    logical_or_expression      go to state 75
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 90

    6 function_definition: type_specifier declarator block .

    $default  reduce using rule 6 (function_definition)


State 91

    9 declaration: type_specifier init_declarator_list SEMIC .

    $default  reduce using rule 9 (declaration)


State 92

   19 init_declarator_list: init_declarator_list COMMA . init_declarator

    IDENTIFIER  shift, and go to state 1
    LBRACKET    shift, and go to state 9

    declarator         go to state 134
    direct_declarator  go to state 17
    init_declarator    go to state 176


State 93

   39 identifier_list: IDENTIFIER .

    $default  reduce using rule 39 (identifier_list)


State 94

   31 direct_declarator: direct_declarator LBRACKET RBRACKET .

    $default  reduce using rule 31 (direct_declarator)


State 95

  144 parameter_declaration: declaration_specifiers . declarator
  145                      | declaration_specifiers .

    IDENTIFIER  shift, and go to state 1
    LBRACKET    shift, and go to state 9

    $default  reduce using rule 145 (parameter_declaration)

    declarator         go to state 177
    direct_declarator  go to state 17


State 96

   10 declaration_specifiers: type_specifier .

    $default  reduce using rule 10 (declaration_specifiers)


State 97

   30 direct_declarator: direct_declarator LBRACKET identifier_list . RBRACKET
   40 identifier_list: identifier_list . COMMA IDENTIFIER

    RBRACKET  shift, and go to state 178
    COMMA     shift, and go to state 179


State 98

   29 direct_declarator: direct_declarator LBRACKET parameter_list . RBRACKET
   50 parameter_list: parameter_list . COMMA parameter_declaration

    RBRACKET  shift, and go to state 180
    COMMA     shift, and go to state 181


State 99

   49 parameter_list: parameter_declaration .

    $default  reduce using rule 49 (parameter_list)


State 100

  103 primary_expression: IDENTIFIER .

    $default  reduce using rule 103 (primary_expression)


State 101

   33 direct_declarator: direct_declarator LSQUAREBRACKET RSQUAREBRACKET .

    $default  reduce using rule 33 (direct_declarator)


State 102

   32 direct_declarator: direct_declarator LSQUAREBRACKET constant_expression . RSQUAREBRACKET

    RSQUAREBRACKET  shift, and go to state 182


State 103

   38 constant_expression: conditional_expression .

    $default  reduce using rule 38 (constant_expression)


State 104

  133 multiplicative_expression: unary_expression .

    $default  reduce using rule 133 (multiplicative_expression)


State 105

  140 enumerator_list: enumerator_list . COMMA enumerator
  142 enum_specifier: ENUM IDENTIFIER LCURLYBRACE enumerator_list . RCURLYBRACE

    RCURLYBRACE  shift, and go to state 183
    COMMA        shift, and go to state 108


State 106

  138 enumerator: IDENTIFIER EQ . constant_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    constant_expression        go to state 184
    conditional_expression     go to state 103
    logical_or_expression      go to state 75
    unary_expression           go to state 104
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 107

  141 enum_specifier: ENUM LCURLYBRACE enumerator_list RCURLYBRACE .

    $default  reduce using rule 141 (enum_specifier)


State 108

  140 enumerator_list: enumerator_list COMMA . enumerator

    IDENTIFIER  shift, and go to state 33

    enumerator  go to state 185


State 109

   51 labeled_statement: IDENTIFIER COLON . statement

    IDENTIFIER      shift, and go to state 37
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    CASE            shift, and go to state 47
    DEFAULT         shift, and go to state 48
    SWITCH          shift, and go to state 49
    WHILE           shift, and go to state 50
    DO              shift, and go to state 51
    FOR             shift, and go to state 52
    CONTINUE        shift, and go to state 53
    BREAK           shift, and go to state 54
    RETURN          shift, and go to state 55
    IF              shift, and go to state 56
    SEMIC           shift, and go to state 57
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60
    LCURLYBRACE     shift, and go to state 24

    block                      go to state 64
    statement                  go to state 186
    conditional_expression     go to state 68
    labeled_statement          go to state 69
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73
    assignment_expression      go to state 74
    logical_or_expression      go to state 75
    expression                 go to state 76
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 110

   92 unary_expression: SIZEOF LBRACKET . type_name RBRACKET
  107 primary_expression: LBRACKET . expression RBRACKET

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    CHAR            shift, and go to state 2
    INT             shift, and go to state 3
    UNSIGNED        shift, and go to state 4
    FLOAT           shift, and go to state 5
    DOUBLE          shift, and go to state 6
    VOID            shift, and go to state 7
    ENUM            shift, and go to state 8
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    type_specifier             go to state 187
    conditional_expression     go to state 68
    assignment_expression      go to state 74
    logical_or_expression      go to state 75
    expression                 go to state 130
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    type_name                  go to state 188
    inclusive_or_expression    go to state 81
    specifier_qualifier_list   go to state 189
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88
    enum_specifier             go to state 18


State 111

   91 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 91 (unary_expression)


State 112

   84 unary_expression: INC_OP unary_expression .

    $default  reduce using rule 84 (unary_expression)


State 113

   85 unary_expression: DEC_OP unary_expression .

    $default  reduce using rule 85 (unary_expression)


State 114

   86 unary_expression: AND unary_expression .

    $default  reduce using rule 86 (unary_expression)


State 115

   89 unary_expression: TILDE unary_expression .

    $default  reduce using rule 89 (unary_expression)


State 116

   90 unary_expression: EXCLAM unary_expression .

    $default  reduce using rule 90 (unary_expression)


State 117

   52 labeled_statement: CASE constant_expression . COLON statement

    COLON  shift, and go to state 190


State 118

   53 labeled_statement: DEFAULT COLON . statement

    IDENTIFIER      shift, and go to state 37
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    CASE            shift, and go to state 47
    DEFAULT         shift, and go to state 48
    SWITCH          shift, and go to state 49
    WHILE           shift, and go to state 50
    DO              shift, and go to state 51
    FOR             shift, and go to state 52
    CONTINUE        shift, and go to state 53
    BREAK           shift, and go to state 54
    RETURN          shift, and go to state 55
    IF              shift, and go to state 56
    SEMIC           shift, and go to state 57
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60
    LCURLYBRACE     shift, and go to state 24

    block                      go to state 64
    statement                  go to state 191
    conditional_expression     go to state 68
    labeled_statement          go to state 69
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73
    assignment_expression      go to state 74
    logical_or_expression      go to state 75
    expression                 go to state 76
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 119

   58 selection_statement: SWITCH LBRACKET . expression RBRACKET statement

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    conditional_expression     go to state 68
    assignment_expression      go to state 74
    logical_or_expression      go to state 75
    expression                 go to state 192
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 120

   59 iteration_statement: WHILE LBRACKET . expression RBRACKET statement

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    conditional_expression     go to state 68
    assignment_expression      go to state 74
    logical_or_expression      go to state 75
    expression                 go to state 193
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 121

   60 iteration_statement: DO statement . WHILE LBRACKET expression RBRACKET SEMIC

    WHILE  shift, and go to state 194


State 122

   61 iteration_statement: FOR LBRACKET . expression_statement expression_statement LBRACKET statement
   62                    | FOR LBRACKET . expression_statement expression_statement expression RBRACKET statement

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    SEMIC           shift, and go to state 57
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    conditional_expression     go to state 68
    expression_statement       go to state 195
    assignment_expression      go to state 74
    logical_or_expression      go to state 75
    expression                 go to state 76
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 123

   63 jump_statement: CONTINUE SEMIC .

    $default  reduce using rule 63 (jump_statement)


State 124

   64 jump_statement: BREAK SEMIC .

    $default  reduce using rule 64 (jump_statement)


State 125

   65 jump_statement: RETURN SEMIC .

    $default  reduce using rule 65 (jump_statement)


State 126

   66 jump_statement: RETURN expression . SEMIC
   82 expression: expression . COMMA assignment_expression

    SEMIC  shift, and go to state 196
    COMMA  shift, and go to state 140


State 127

   56 selection_statement: IF LBRACKET . expression RBRACKET statement ELSE statement
   57                    | IF LBRACKET . expression RBRACKET statement

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    conditional_expression     go to state 68
    assignment_expression      go to state 74
    logical_or_expression      go to state 75
    expression                 go to state 197
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 128

   87 unary_expression: ADD unary_expression .

    $default  reduce using rule 87 (unary_expression)


State 129

   88 unary_expression: SUB unary_expression .

    $default  reduce using rule 88 (unary_expression)


State 130

   82 expression: expression . COMMA assignment_expression
  107 primary_expression: LBRACKET expression . RBRACKET

    RBRACKET  shift, and go to state 198
    COMMA     shift, and go to state 140


State 131

   16 block: LCURLYBRACE declaration_list RCURLYBRACE .

    $default  reduce using rule 16 (block)


State 132

   13 declaration_list: declaration_list declaration .

    $default  reduce using rule 13 (declaration_list)


State 133

   17 block: LCURLYBRACE declaration_list statement_list . RCURLYBRACE
   35 statement_list: statement_list . statement

    IDENTIFIER      shift, and go to state 37
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    CASE            shift, and go to state 47
    DEFAULT         shift, and go to state 48
    SWITCH          shift, and go to state 49
    WHILE           shift, and go to state 50
    DO              shift, and go to state 51
    FOR             shift, and go to state 52
    CONTINUE        shift, and go to state 53
    BREAK           shift, and go to state 54
    RETURN          shift, and go to state 55
    IF              shift, and go to state 56
    SEMIC           shift, and go to state 57
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60
    LCURLYBRACE     shift, and go to state 24
    RCURLYBRACE     shift, and go to state 199

    block                      go to state 64
    statement                  go to state 136
    conditional_expression     go to state 68
    labeled_statement          go to state 69
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73
    assignment_expression      go to state 74
    logical_or_expression      go to state 75
    expression                 go to state 76
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 134

   36 init_declarator: declarator .
   37                | declarator . EQ assignment_expression

    EQ  shift, and go to state 89

    $default  reduce using rule 36 (init_declarator)


State 135

   15 block: LCURLYBRACE statement_list RCURLYBRACE .

    $default  reduce using rule 15 (block)


State 136

   35 statement_list: statement_list statement .

    $default  reduce using rule 35 (statement_list)


State 137

   80 logical_or_expression: logical_or_expression OR_OP . logical_and_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    unary_expression           go to state 104
    logical_and_expression     go to state 200
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 138

   48 conditional_expression: logical_or_expression QMARK . expression COLON conditional_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    conditional_expression     go to state 68
    assignment_expression      go to state 74
    logical_or_expression      go to state 75
    expression                 go to state 201
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 139

   55 expression_statement: expression SEMIC .

    $default  reduce using rule 55 (expression_statement)


State 140

   82 expression: expression COMMA . assignment_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    conditional_expression     go to state 68
    assignment_expression      go to state 202
    logical_or_expression      go to state 75
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 141

   69 assignment_expression: unary_expression MUL_ASSIGN . assignment_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    conditional_expression     go to state 68
    assignment_expression      go to state 203
    logical_or_expression      go to state 75
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 142

   70 assignment_expression: unary_expression DIV_ASSIGN . assignment_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    conditional_expression     go to state 68
    assignment_expression      go to state 204
    logical_or_expression      go to state 75
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 143

   71 assignment_expression: unary_expression MOD_ASSIGN . assignment_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    conditional_expression     go to state 68
    assignment_expression      go to state 205
    logical_or_expression      go to state 75
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 144

   72 assignment_expression: unary_expression ADD_ASSIGN . assignment_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    conditional_expression     go to state 68
    assignment_expression      go to state 206
    logical_or_expression      go to state 75
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 145

   73 assignment_expression: unary_expression SUB_ASSIGN . assignment_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    conditional_expression     go to state 68
    assignment_expression      go to state 207
    logical_or_expression      go to state 75
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 146

   74 assignment_expression: unary_expression LEFT_ASSIGN . assignment_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    conditional_expression     go to state 68
    assignment_expression      go to state 208
    logical_or_expression      go to state 75
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 147

   75 assignment_expression: unary_expression RIGHT_ASSIGN . assignment_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    conditional_expression     go to state 68
    assignment_expression      go to state 209
    logical_or_expression      go to state 75
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 148

   76 assignment_expression: unary_expression AND_ASSIGN . assignment_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    conditional_expression     go to state 68
    assignment_expression      go to state 210
    logical_or_expression      go to state 75
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 149

   77 assignment_expression: unary_expression XOR_ASSIGN . assignment_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    conditional_expression     go to state 68
    assignment_expression      go to state 211
    logical_or_expression      go to state 75
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 150

   78 assignment_expression: unary_expression OR_ASSIGN . assignment_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    conditional_expression     go to state 68
    assignment_expression      go to state 212
    logical_or_expression      go to state 75
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 151

   68 assignment_expression: unary_expression EQ . assignment_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    conditional_expression     go to state 68
    assignment_expression      go to state 213
    logical_or_expression      go to state 75
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 152

   94 logical_and_expression: logical_and_expression AND_OP . inclusive_or_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    unary_expression           go to state 104
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 214
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 153

  100 postfix_expression: postfix_expression PTR_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 215


State 154

  101 postfix_expression: postfix_expression INC_OP .

    $default  reduce using rule 101 (postfix_expression)


State 155

  102 postfix_expression: postfix_expression DEC_OP .

    $default  reduce using rule 102 (postfix_expression)


State 156

   99 postfix_expression: postfix_expression FULLSTOP . IDENTIFIER

    IDENTIFIER  shift, and go to state 216


State 157

   97 postfix_expression: postfix_expression LBRACKET . RBRACKET
   98                   | postfix_expression LBRACKET . argument_expression_list RBRACKET

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60
    RBRACKET        shift, and go to state 217

    conditional_expression     go to state 68
    assignment_expression      go to state 218
    logical_or_expression      go to state 75
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    argument_expression_list   go to state 219
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 158

   96 postfix_expression: postfix_expression LSQUAREBRACKET . expression RSQUAREBRACKET

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    conditional_expression     go to state 68
    assignment_expression      go to state 74
    logical_or_expression      go to state 75
    expression                 go to state 220
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 159

  110 inclusive_or_expression: inclusive_or_expression INCLOR . exclusive_or_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    unary_expression           go to state 104
    postfix_expression         go to state 79
    primary_expression         go to state 80
    exclusive_or_expression    go to state 221
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 160

  116 exclusive_or_expression: exclusive_or_expression EXCLOR . and_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    unary_expression           go to state 104
    postfix_expression         go to state 79
    primary_expression         go to state 80
    and_expression             go to state 222
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 161

  118 and_expression: and_expression AND . equality_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    unary_expression           go to state 104
    postfix_expression         go to state 79
    primary_expression         go to state 80
    equality_expression        go to state 223
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 162

  120 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    unary_expression           go to state 104
    postfix_expression         go to state 79
    primary_expression         go to state 80
    relational_expression      go to state 224
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 163

  121 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    unary_expression           go to state 104
    postfix_expression         go to state 79
    primary_expression         go to state 80
    relational_expression      go to state 225
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 164

  123 relational_expression: relational_expression LESSTHAN . shift_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    unary_expression           go to state 104
    postfix_expression         go to state 79
    primary_expression         go to state 80
    shift_expression           go to state 226
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 165

  124 relational_expression: relational_expression GREATERTHAN . shift_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    unary_expression           go to state 104
    postfix_expression         go to state 79
    primary_expression         go to state 80
    shift_expression           go to state 227
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 166

  125 relational_expression: relational_expression LTEQ . shift_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    unary_expression           go to state 104
    postfix_expression         go to state 79
    primary_expression         go to state 80
    shift_expression           go to state 228
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 167

  126 relational_expression: relational_expression GTEQ . shift_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    unary_expression           go to state 104
    postfix_expression         go to state 79
    primary_expression         go to state 80
    shift_expression           go to state 229
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 168

  128 shift_expression: shift_expression LEFT_OP . additive_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    unary_expression           go to state 104
    postfix_expression         go to state 79
    primary_expression         go to state 80
    additive_expression        go to state 230
    multiplicative_expression  go to state 88


State 169

  129 shift_expression: shift_expression RIGHT_OP . additive_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    unary_expression           go to state 104
    postfix_expression         go to state 79
    primary_expression         go to state 80
    additive_expression        go to state 231
    multiplicative_expression  go to state 88


State 170

  131 additive_expression: additive_expression ADD . multiplicative_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    unary_expression           go to state 104
    postfix_expression         go to state 79
    primary_expression         go to state 80
    multiplicative_expression  go to state 232


State 171

  132 additive_expression: additive_expression SUB . multiplicative_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    unary_expression           go to state 104
    postfix_expression         go to state 79
    primary_expression         go to state 80
    multiplicative_expression  go to state 233


State 172

  134 multiplicative_expression: multiplicative_expression MUL . unary_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    unary_expression    go to state 234
    postfix_expression  go to state 79
    primary_expression  go to state 80


State 173

  135 multiplicative_expression: multiplicative_expression DIV . unary_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    unary_expression    go to state 235
    postfix_expression  go to state 79
    primary_expression  go to state 80


State 174

  136 multiplicative_expression: multiplicative_expression MOD . unary_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    unary_expression    go to state 236
    postfix_expression  go to state 79
    primary_expression  go to state 80


State 175

   37 init_declarator: declarator EQ assignment_expression .

    $default  reduce using rule 37 (init_declarator)


State 176

   19 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 19 (init_declarator_list)


State 177

  144 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 144 (parameter_declaration)


State 178

   30 direct_declarator: direct_declarator LBRACKET identifier_list RBRACKET .

    $default  reduce using rule 30 (direct_declarator)


State 179

   40 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 237


State 180

   29 direct_declarator: direct_declarator LBRACKET parameter_list RBRACKET .

    $default  reduce using rule 29 (direct_declarator)


State 181

   50 parameter_list: parameter_list COMMA . parameter_declaration

    CHAR      shift, and go to state 2
    INT       shift, and go to state 3
    UNSIGNED  shift, and go to state 4
    FLOAT     shift, and go to state 5
    DOUBLE    shift, and go to state 6
    VOID      shift, and go to state 7
    ENUM      shift, and go to state 8

    declaration_specifiers  go to state 95
    type_specifier          go to state 96
    enum_specifier          go to state 18
    parameter_declaration   go to state 238


State 182

   32 direct_declarator: direct_declarator LSQUAREBRACKET constant_expression RSQUAREBRACKET .

    $default  reduce using rule 32 (direct_declarator)


State 183

  142 enum_specifier: ENUM IDENTIFIER LCURLYBRACE enumerator_list RCURLYBRACE .

    $default  reduce using rule 142 (enum_specifier)


State 184

  138 enumerator: IDENTIFIER EQ constant_expression .

    $default  reduce using rule 138 (enumerator)


State 185

  140 enumerator_list: enumerator_list COMMA enumerator .

    $default  reduce using rule 140 (enumerator_list)


State 186

   51 labeled_statement: IDENTIFIER COLON statement .

    $default  reduce using rule 51 (labeled_statement)


State 187

  113 specifier_qualifier_list: type_specifier . specifier_qualifier_list
  114                         | type_specifier .

    CHAR      shift, and go to state 2
    INT       shift, and go to state 3
    UNSIGNED  shift, and go to state 4
    FLOAT     shift, and go to state 5
    DOUBLE    shift, and go to state 6
    VOID      shift, and go to state 7
    ENUM      shift, and go to state 8

    $default  reduce using rule 114 (specifier_qualifier_list)

    type_specifier            go to state 187
    specifier_qualifier_list  go to state 239
    enum_specifier            go to state 18


State 188

   92 unary_expression: SIZEOF LBRACKET type_name . RBRACKET

    RBRACKET  shift, and go to state 240


State 189

  108 type_name: specifier_qualifier_list .

    $default  reduce using rule 108 (type_name)


State 190

   52 labeled_statement: CASE constant_expression COLON . statement

    IDENTIFIER      shift, and go to state 37
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    CASE            shift, and go to state 47
    DEFAULT         shift, and go to state 48
    SWITCH          shift, and go to state 49
    WHILE           shift, and go to state 50
    DO              shift, and go to state 51
    FOR             shift, and go to state 52
    CONTINUE        shift, and go to state 53
    BREAK           shift, and go to state 54
    RETURN          shift, and go to state 55
    IF              shift, and go to state 56
    SEMIC           shift, and go to state 57
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60
    LCURLYBRACE     shift, and go to state 24

    block                      go to state 64
    statement                  go to state 241
    conditional_expression     go to state 68
    labeled_statement          go to state 69
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73
    assignment_expression      go to state 74
    logical_or_expression      go to state 75
    expression                 go to state 76
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 191

   53 labeled_statement: DEFAULT COLON statement .

    $default  reduce using rule 53 (labeled_statement)


State 192

   58 selection_statement: SWITCH LBRACKET expression . RBRACKET statement
   82 expression: expression . COMMA assignment_expression

    RBRACKET  shift, and go to state 242
    COMMA     shift, and go to state 140


State 193

   59 iteration_statement: WHILE LBRACKET expression . RBRACKET statement
   82 expression: expression . COMMA assignment_expression

    RBRACKET  shift, and go to state 243
    COMMA     shift, and go to state 140


State 194

   60 iteration_statement: DO statement WHILE . LBRACKET expression RBRACKET SEMIC

    LBRACKET  shift, and go to state 244


State 195

   61 iteration_statement: FOR LBRACKET expression_statement . expression_statement LBRACKET statement
   62                    | FOR LBRACKET expression_statement . expression_statement expression RBRACKET statement

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    SEMIC           shift, and go to state 57
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    conditional_expression     go to state 68
    expression_statement       go to state 245
    assignment_expression      go to state 74
    logical_or_expression      go to state 75
    expression                 go to state 76
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 196

   66 jump_statement: RETURN expression SEMIC .

    $default  reduce using rule 66 (jump_statement)


State 197

   56 selection_statement: IF LBRACKET expression . RBRACKET statement ELSE statement
   57                    | IF LBRACKET expression . RBRACKET statement
   82 expression: expression . COMMA assignment_expression

    RBRACKET  shift, and go to state 246
    COMMA     shift, and go to state 140


State 198

  107 primary_expression: LBRACKET expression RBRACKET .

    $default  reduce using rule 107 (primary_expression)


State 199

   17 block: LCURLYBRACE declaration_list statement_list RCURLYBRACE .

    $default  reduce using rule 17 (block)


State 200

   80 logical_or_expression: logical_or_expression OR_OP logical_and_expression .
   94 logical_and_expression: logical_and_expression . AND_OP inclusive_or_expression

    AND_OP  shift, and go to state 152

    $default  reduce using rule 80 (logical_or_expression)


State 201

   48 conditional_expression: logical_or_expression QMARK expression . COLON conditional_expression
   82 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 140
    COLON  shift, and go to state 247


State 202

   82 expression: expression COMMA assignment_expression .

    $default  reduce using rule 82 (expression)


State 203

   69 assignment_expression: unary_expression MUL_ASSIGN assignment_expression .

    $default  reduce using rule 69 (assignment_expression)


State 204

   70 assignment_expression: unary_expression DIV_ASSIGN assignment_expression .

    $default  reduce using rule 70 (assignment_expression)


State 205

   71 assignment_expression: unary_expression MOD_ASSIGN assignment_expression .

    $default  reduce using rule 71 (assignment_expression)


State 206

   72 assignment_expression: unary_expression ADD_ASSIGN assignment_expression .

    $default  reduce using rule 72 (assignment_expression)


State 207

   73 assignment_expression: unary_expression SUB_ASSIGN assignment_expression .

    $default  reduce using rule 73 (assignment_expression)


State 208

   74 assignment_expression: unary_expression LEFT_ASSIGN assignment_expression .

    $default  reduce using rule 74 (assignment_expression)


State 209

   75 assignment_expression: unary_expression RIGHT_ASSIGN assignment_expression .

    $default  reduce using rule 75 (assignment_expression)


State 210

   76 assignment_expression: unary_expression AND_ASSIGN assignment_expression .

    $default  reduce using rule 76 (assignment_expression)


State 211

   77 assignment_expression: unary_expression XOR_ASSIGN assignment_expression .

    $default  reduce using rule 77 (assignment_expression)


State 212

   78 assignment_expression: unary_expression OR_ASSIGN assignment_expression .

    $default  reduce using rule 78 (assignment_expression)


State 213

   68 assignment_expression: unary_expression EQ assignment_expression .

    $default  reduce using rule 68 (assignment_expression)


State 214

   94 logical_and_expression: logical_and_expression AND_OP inclusive_or_expression .
  110 inclusive_or_expression: inclusive_or_expression . INCLOR exclusive_or_expression

    INCLOR  shift, and go to state 159

    $default  reduce using rule 94 (logical_and_expression)


State 215

  100 postfix_expression: postfix_expression PTR_OP IDENTIFIER .

    $default  reduce using rule 100 (postfix_expression)


State 216

   99 postfix_expression: postfix_expression FULLSTOP IDENTIFIER .

    $default  reduce using rule 99 (postfix_expression)


State 217

   97 postfix_expression: postfix_expression LBRACKET RBRACKET .

    $default  reduce using rule 97 (postfix_expression)


State 218

  111 argument_expression_list: assignment_expression .

    $default  reduce using rule 111 (argument_expression_list)


State 219

   98 postfix_expression: postfix_expression LBRACKET argument_expression_list . RBRACKET
  112 argument_expression_list: argument_expression_list . COMMA assignment_expression

    RBRACKET  shift, and go to state 248
    COMMA     shift, and go to state 249


State 220

   82 expression: expression . COMMA assignment_expression
   96 postfix_expression: postfix_expression LSQUAREBRACKET expression . RSQUAREBRACKET

    COMMA           shift, and go to state 140
    RSQUAREBRACKET  shift, and go to state 250


State 221

  110 inclusive_or_expression: inclusive_or_expression INCLOR exclusive_or_expression .
  116 exclusive_or_expression: exclusive_or_expression . EXCLOR and_expression

    EXCLOR  shift, and go to state 160

    $default  reduce using rule 110 (inclusive_or_expression)


State 222

  116 exclusive_or_expression: exclusive_or_expression EXCLOR and_expression .
  118 and_expression: and_expression . AND equality_expression

    AND  shift, and go to state 161

    $default  reduce using rule 116 (exclusive_or_expression)


State 223

  118 and_expression: and_expression AND equality_expression .
  120 equality_expression: equality_expression . EQ_OP relational_expression
  121                    | equality_expression . NE_OP relational_expression

    EQ_OP  shift, and go to state 162
    NE_OP  shift, and go to state 163

    $default  reduce using rule 118 (and_expression)


State 224

  120 equality_expression: equality_expression EQ_OP relational_expression .
  123 relational_expression: relational_expression . LESSTHAN shift_expression
  124                      | relational_expression . GREATERTHAN shift_expression
  125                      | relational_expression . LTEQ shift_expression
  126                      | relational_expression . GTEQ shift_expression

    LESSTHAN     shift, and go to state 164
    GREATERTHAN  shift, and go to state 165
    LTEQ         shift, and go to state 166
    GTEQ         shift, and go to state 167

    $default  reduce using rule 120 (equality_expression)


State 225

  121 equality_expression: equality_expression NE_OP relational_expression .
  123 relational_expression: relational_expression . LESSTHAN shift_expression
  124                      | relational_expression . GREATERTHAN shift_expression
  125                      | relational_expression . LTEQ shift_expression
  126                      | relational_expression . GTEQ shift_expression

    LESSTHAN     shift, and go to state 164
    GREATERTHAN  shift, and go to state 165
    LTEQ         shift, and go to state 166
    GTEQ         shift, and go to state 167

    $default  reduce using rule 121 (equality_expression)


State 226

  123 relational_expression: relational_expression LESSTHAN shift_expression .
  128 shift_expression: shift_expression . LEFT_OP additive_expression
  129                 | shift_expression . RIGHT_OP additive_expression

    LEFT_OP   shift, and go to state 168
    RIGHT_OP  shift, and go to state 169

    $default  reduce using rule 123 (relational_expression)


State 227

  124 relational_expression: relational_expression GREATERTHAN shift_expression .
  128 shift_expression: shift_expression . LEFT_OP additive_expression
  129                 | shift_expression . RIGHT_OP additive_expression

    LEFT_OP   shift, and go to state 168
    RIGHT_OP  shift, and go to state 169

    $default  reduce using rule 124 (relational_expression)


State 228

  125 relational_expression: relational_expression LTEQ shift_expression .
  128 shift_expression: shift_expression . LEFT_OP additive_expression
  129                 | shift_expression . RIGHT_OP additive_expression

    LEFT_OP   shift, and go to state 168
    RIGHT_OP  shift, and go to state 169

    $default  reduce using rule 125 (relational_expression)


State 229

  126 relational_expression: relational_expression GTEQ shift_expression .
  128 shift_expression: shift_expression . LEFT_OP additive_expression
  129                 | shift_expression . RIGHT_OP additive_expression

    LEFT_OP   shift, and go to state 168
    RIGHT_OP  shift, and go to state 169

    $default  reduce using rule 126 (relational_expression)


State 230

  128 shift_expression: shift_expression LEFT_OP additive_expression .
  131 additive_expression: additive_expression . ADD multiplicative_expression
  132                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 170
    SUB  shift, and go to state 171

    $default  reduce using rule 128 (shift_expression)


State 231

  129 shift_expression: shift_expression RIGHT_OP additive_expression .
  131 additive_expression: additive_expression . ADD multiplicative_expression
  132                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 170
    SUB  shift, and go to state 171

    $default  reduce using rule 129 (shift_expression)


State 232

  131 additive_expression: additive_expression ADD multiplicative_expression .
  134 multiplicative_expression: multiplicative_expression . MUL unary_expression
  135                          | multiplicative_expression . DIV unary_expression
  136                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 172
    DIV  shift, and go to state 173
    MOD  shift, and go to state 174

    $default  reduce using rule 131 (additive_expression)


State 233

  132 additive_expression: additive_expression SUB multiplicative_expression .
  134 multiplicative_expression: multiplicative_expression . MUL unary_expression
  135                          | multiplicative_expression . DIV unary_expression
  136                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 172
    DIV  shift, and go to state 173
    MOD  shift, and go to state 174

    $default  reduce using rule 132 (additive_expression)


State 234

  134 multiplicative_expression: multiplicative_expression MUL unary_expression .

    $default  reduce using rule 134 (multiplicative_expression)


State 235

  135 multiplicative_expression: multiplicative_expression DIV unary_expression .

    $default  reduce using rule 135 (multiplicative_expression)


State 236

  136 multiplicative_expression: multiplicative_expression MOD unary_expression .

    $default  reduce using rule 136 (multiplicative_expression)


State 237

   40 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 40 (identifier_list)


State 238

   50 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 50 (parameter_list)


State 239

  113 specifier_qualifier_list: type_specifier specifier_qualifier_list .

    $default  reduce using rule 113 (specifier_qualifier_list)


State 240

   92 unary_expression: SIZEOF LBRACKET type_name RBRACKET .

    $default  reduce using rule 92 (unary_expression)


State 241

   52 labeled_statement: CASE constant_expression COLON statement .

    $default  reduce using rule 52 (labeled_statement)


State 242

   58 selection_statement: SWITCH LBRACKET expression RBRACKET . statement

    IDENTIFIER      shift, and go to state 37
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    CASE            shift, and go to state 47
    DEFAULT         shift, and go to state 48
    SWITCH          shift, and go to state 49
    WHILE           shift, and go to state 50
    DO              shift, and go to state 51
    FOR             shift, and go to state 52
    CONTINUE        shift, and go to state 53
    BREAK           shift, and go to state 54
    RETURN          shift, and go to state 55
    IF              shift, and go to state 56
    SEMIC           shift, and go to state 57
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60
    LCURLYBRACE     shift, and go to state 24

    block                      go to state 64
    statement                  go to state 251
    conditional_expression     go to state 68
    labeled_statement          go to state 69
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73
    assignment_expression      go to state 74
    logical_or_expression      go to state 75
    expression                 go to state 76
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 243

   59 iteration_statement: WHILE LBRACKET expression RBRACKET . statement

    IDENTIFIER      shift, and go to state 37
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    CASE            shift, and go to state 47
    DEFAULT         shift, and go to state 48
    SWITCH          shift, and go to state 49
    WHILE           shift, and go to state 50
    DO              shift, and go to state 51
    FOR             shift, and go to state 52
    CONTINUE        shift, and go to state 53
    BREAK           shift, and go to state 54
    RETURN          shift, and go to state 55
    IF              shift, and go to state 56
    SEMIC           shift, and go to state 57
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60
    LCURLYBRACE     shift, and go to state 24

    block                      go to state 64
    statement                  go to state 252
    conditional_expression     go to state 68
    labeled_statement          go to state 69
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73
    assignment_expression      go to state 74
    logical_or_expression      go to state 75
    expression                 go to state 76
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 244

   60 iteration_statement: DO statement WHILE LBRACKET . expression RBRACKET SEMIC

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    conditional_expression     go to state 68
    assignment_expression      go to state 74
    logical_or_expression      go to state 75
    expression                 go to state 253
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 245

   61 iteration_statement: FOR LBRACKET expression_statement expression_statement . LBRACKET statement
   62                    | FOR LBRACKET expression_statement expression_statement . expression RBRACKET statement

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 254

    conditional_expression     go to state 68
    assignment_expression      go to state 74
    logical_or_expression      go to state 75
    expression                 go to state 255
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 246

   56 selection_statement: IF LBRACKET expression RBRACKET . statement ELSE statement
   57                    | IF LBRACKET expression RBRACKET . statement

    IDENTIFIER      shift, and go to state 37
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    CASE            shift, and go to state 47
    DEFAULT         shift, and go to state 48
    SWITCH          shift, and go to state 49
    WHILE           shift, and go to state 50
    DO              shift, and go to state 51
    FOR             shift, and go to state 52
    CONTINUE        shift, and go to state 53
    BREAK           shift, and go to state 54
    RETURN          shift, and go to state 55
    IF              shift, and go to state 56
    SEMIC           shift, and go to state 57
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60
    LCURLYBRACE     shift, and go to state 24

    block                      go to state 64
    statement                  go to state 256
    conditional_expression     go to state 68
    labeled_statement          go to state 69
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73
    assignment_expression      go to state 74
    logical_or_expression      go to state 75
    expression                 go to state 76
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 247

   48 conditional_expression: logical_or_expression QMARK expression COLON . conditional_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    conditional_expression     go to state 257
    logical_or_expression      go to state 75
    unary_expression           go to state 104
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 248

   98 postfix_expression: postfix_expression LBRACKET argument_expression_list RBRACKET .

    $default  reduce using rule 98 (postfix_expression)


State 249

  112 argument_expression_list: argument_expression_list COMMA . assignment_expression

    IDENTIFIER      shift, and go to state 100
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60

    conditional_expression     go to state 68
    assignment_expression      go to state 258
    logical_or_expression      go to state 75
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 250

   96 postfix_expression: postfix_expression LSQUAREBRACKET expression RSQUAREBRACKET .

    $default  reduce using rule 96 (postfix_expression)


State 251

   58 selection_statement: SWITCH LBRACKET expression RBRACKET statement .

    $default  reduce using rule 58 (selection_statement)


State 252

   59 iteration_statement: WHILE LBRACKET expression RBRACKET statement .

    $default  reduce using rule 59 (iteration_statement)


State 253

   60 iteration_statement: DO statement WHILE LBRACKET expression . RBRACKET SEMIC
   82 expression: expression . COMMA assignment_expression

    RBRACKET  shift, and go to state 259
    COMMA     shift, and go to state 140


State 254

   61 iteration_statement: FOR LBRACKET expression_statement expression_statement LBRACKET . statement
  107 primary_expression: LBRACKET . expression RBRACKET

    IDENTIFIER      shift, and go to state 37
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    CASE            shift, and go to state 47
    DEFAULT         shift, and go to state 48
    SWITCH          shift, and go to state 49
    WHILE           shift, and go to state 50
    DO              shift, and go to state 51
    FOR             shift, and go to state 52
    CONTINUE        shift, and go to state 53
    BREAK           shift, and go to state 54
    RETURN          shift, and go to state 55
    IF              shift, and go to state 56
    SEMIC           shift, and go to state 57
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60
    LCURLYBRACE     shift, and go to state 24

    block                      go to state 64
    statement                  go to state 260
    conditional_expression     go to state 68
    labeled_statement          go to state 69
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73
    assignment_expression      go to state 74
    logical_or_expression      go to state 75
    expression                 go to state 261
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 255

   62 iteration_statement: FOR LBRACKET expression_statement expression_statement expression . RBRACKET statement
   82 expression: expression . COMMA assignment_expression

    RBRACKET  shift, and go to state 262
    COMMA     shift, and go to state 140


State 256

   56 selection_statement: IF LBRACKET expression RBRACKET statement . ELSE statement
   57                    | IF LBRACKET expression RBRACKET statement .

    ELSE  shift, and go to state 263

    ELSE      [reduce using rule 57 (selection_statement)]
    $default  reduce using rule 57 (selection_statement)


State 257

   48 conditional_expression: logical_or_expression QMARK expression COLON conditional_expression .

    $default  reduce using rule 48 (conditional_expression)


State 258

  112 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 112 (argument_expression_list)


State 259

   60 iteration_statement: DO statement WHILE LBRACKET expression RBRACKET . SEMIC

    SEMIC  shift, and go to state 264


State 260

   61 iteration_statement: FOR LBRACKET expression_statement expression_statement LBRACKET statement .

    $default  reduce using rule 61 (iteration_statement)


State 261

   55 expression_statement: expression . SEMIC
   82 expression: expression . COMMA assignment_expression
  107 primary_expression: LBRACKET expression . RBRACKET

    SEMIC     shift, and go to state 139
    RBRACKET  shift, and go to state 198
    COMMA     shift, and go to state 140


State 262

   62 iteration_statement: FOR LBRACKET expression_statement expression_statement expression RBRACKET . statement

    IDENTIFIER      shift, and go to state 37
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    CASE            shift, and go to state 47
    DEFAULT         shift, and go to state 48
    SWITCH          shift, and go to state 49
    WHILE           shift, and go to state 50
    DO              shift, and go to state 51
    FOR             shift, and go to state 52
    CONTINUE        shift, and go to state 53
    BREAK           shift, and go to state 54
    RETURN          shift, and go to state 55
    IF              shift, and go to state 56
    SEMIC           shift, and go to state 57
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60
    LCURLYBRACE     shift, and go to state 24

    block                      go to state 64
    statement                  go to state 265
    conditional_expression     go to state 68
    labeled_statement          go to state 69
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73
    assignment_expression      go to state 74
    logical_or_expression      go to state 75
    expression                 go to state 76
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 263

   56 selection_statement: IF LBRACKET expression RBRACKET statement ELSE . statement

    IDENTIFIER      shift, and go to state 37
    INT_CONSTANT    shift, and go to state 38
    FLOAT_CONSTANT  shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    SIZEOF          shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    AND             shift, and go to state 44
    TILDE           shift, and go to state 45
    EXCLAM          shift, and go to state 46
    CASE            shift, and go to state 47
    DEFAULT         shift, and go to state 48
    SWITCH          shift, and go to state 49
    WHILE           shift, and go to state 50
    DO              shift, and go to state 51
    FOR             shift, and go to state 52
    CONTINUE        shift, and go to state 53
    BREAK           shift, and go to state 54
    RETURN          shift, and go to state 55
    IF              shift, and go to state 56
    SEMIC           shift, and go to state 57
    ADD             shift, and go to state 58
    SUB             shift, and go to state 59
    LBRACKET        shift, and go to state 60
    LCURLYBRACE     shift, and go to state 24

    block                      go to state 64
    statement                  go to state 266
    conditional_expression     go to state 68
    labeled_statement          go to state 69
    expression_statement       go to state 70
    selection_statement        go to state 71
    iteration_statement        go to state 72
    jump_statement             go to state 73
    assignment_expression      go to state 74
    logical_or_expression      go to state 75
    expression                 go to state 76
    unary_expression           go to state 77
    logical_and_expression     go to state 78
    postfix_expression         go to state 79
    primary_expression         go to state 80
    inclusive_or_expression    go to state 81
    exclusive_or_expression    go to state 82
    and_expression             go to state 83
    equality_expression        go to state 84
    relational_expression      go to state 85
    shift_expression           go to state 86
    additive_expression        go to state 87
    multiplicative_expression  go to state 88


State 264

   60 iteration_statement: DO statement WHILE LBRACKET expression RBRACKET SEMIC .

    $default  reduce using rule 60 (iteration_statement)


State 265

   62 iteration_statement: FOR LBRACKET expression_statement expression_statement expression RBRACKET statement .

    $default  reduce using rule 62 (iteration_statement)


State 266

   56 selection_statement: IF LBRACKET expression RBRACKET statement ELSE statement .

    $default  reduce using rule 56 (selection_statement)
